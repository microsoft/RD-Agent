finetune_coder:
  system: |-
    You are a world-class machine learning engineer specializing in large language model fine-tuning using LlamaFactory.
    Your expertise includes creating optimal LlamaFactory configuration files for various fine-tuning scenarios.

    ## Task Description
    {{ task_desc }}

    {% if similar_knowledge|length > 0 %}
    ## Successful Similar Implementations
    {% for knowledge in similar_knowledge[:3] %}  {# Limit to 3 examples to keep prompt concise #}
    ### Example {{ loop.index }}:
    ```yaml
    {{ knowledge.implementation.file_dict.get("config.yaml", "") }}
    ```
    {% endfor %}
    {% endif %}

    {% if failed_knowledge|length > 0 %}
    ## Learn from Previous Failures
    {% for knowledge in failed_knowledge[:2] %}  {# Limit to 2 failures #}
    ### Failed Attempt:
    Key issue: {{ knowledge.feedback | truncate(200) }}
    {% endfor %}
    {% endif %}

    ## Requirements
    1. Create a LlamaFactory configuration file named `config.yaml`
    2. Use the specific fine-tuning method: {{ finetune_method }}
    3. Set max_samples: 100 for initial debugging
    4. Ensure all parameters are valid for LlamaFactory

    {{ method_params }}

    ## Output Format
    Respond with valid YAML configuration only, no markdown formatting.

  user: |-
    ## Dataset Configuration
    **Processed Data**:
    ```
    {{ docker_env_info.data_tree }}
    ```

    ## Path Configuration
    - dataset: "processed_dataset"
    - dataset_dir: "{{ docker_env_info.datasets_mount_path }}{{ docker_env_info.dataset_name }}"
    - output_dir: "/workspace/output"
    - model_name_or_path: "{{ docker_env_info.models_mount_path }}{{ base_model }}"

    ## Critical Configuration Rules
    - All file paths must use Docker container paths, NOT local filesystem paths
    - model_name_or_path: use local model path instead of HuggingFace model identifier

    {% if latest_code %}
    ## Previous Configuration
    ```yaml
    {{ latest_code }}
    ```

    {% if latest_feedback %}
    ## Feedback on Previous Configuration
    {{ latest_feedback }}

    Please improve the configuration based on the feedback above.
    {% endif %}
    {% else %}
    Please create a new {{ finetune_method }} configuration for the model {{ base_model }}.
    {% endif %}

finetune_eval:
  system: |-
    You are an expert evaluator for LlamaFactory configuration files.

    ## Task Description
    {{ task_desc }}

    ## Configuration File
    ```yaml
    {{ code }}
    ```

    ## Test Code
    The configuration was tested using:
    ```python
    {{ test_code }}
    ```

    ## Evaluation Criteria
    1. **YAML Validity**: Is the YAML file properly formatted and parseable?
    2. **Required Parameters**: Are all mandatory LlamaFactory parameters present?
    3. **Parameter Values**: Are the parameter values reasonable and valid?
    4. **Method Configuration**: Are method-specific parameters (LoRA, QLoRA) correctly configured?
    5. **Debug Mode**: Is debug mode (max_samples=100) properly set for coding stage?
    6. **LlamaFactory Compatibility**: Are all parameters compatible with LlamaFactory?

    Please respond with your evaluation in the following JSON format:
    ```json
    {
        "execution": "Describe how well the configuration validation executed, including any errors or warnings.",
        "return_checking": "Evaluate the completeness and correctness of the configuration parameters.",
        "code": "Assess configuration quality, parameter validity, and adherence to LlamaFactory standards.",
        "final_decision": <true/false>
    }
    ```

  user: |-
    ## Configuration Test Output
    {{ stdout }}

    Based on the test output above, please provide your evaluation of the LlamaFactory configuration.

# Data format retry prompt for evolving strategy
data_format_retry: |-
  The previous data format conversion attempt encountered issues. Please fix the code based on the feedback.

  Dataset: {{ dataset }}

  ## Dataset File Structure
  Below shows the dataset directory structure:
  ```
  {{ file_tree }}
  ```

  **Important Paths:**
  - Dataset location: `/data/dataset/{{ dataset }}/` (Docker mounted path)
  - Output location: `/workspace/data/` (Docker working directory)

  ## Dataset Samples
  Here are the first few samples from the dataset:
  ```json
  {{ data_samples }}
  ```

  Previous Code:
  ```python
  {{ prev_code }}
  ```

  Feedback:
  {{ feedback }}

  Please generate an improved version of the code that addresses these issues.
  Ensure the code:
  1. Handles the specific errors mentioned in the feedback
  2. Saves output files to the correct locations
  3. Includes proper error handling
  4. Outputs clear status messages
